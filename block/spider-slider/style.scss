@charset 'utf-8';

@import '../../src/css/core/block';

.smb-spider-slider {
  @for $i from 2 through 6 {
    @include _media-only(sm) {
      &[data-sm-slide-to-show="#{ $i }"] {
        .spider__slide {
          max-width: 100% / $i;
        }
      }
    }

    @include _media-only(md) {
      &[data-md-slide-to-show="#{ $i }"] {
        .spider__slide {
          max-width: 100% / $i;
        }
      }
    }

    @include _media-min(lg) {
      &[data-lg-slide-to-show="#{ $i }"] {
        .spider__slide {
          max-width: 100% / $i;
        }
      }
    }
  }

  &__item {
    flex: 1 1 100%;
    max-width: 100%;
  }

  &__item__caption {
    @include _font-size-line-height($_base-font-size-px - 2);
  }

  .spider__slide,
  .smb-spider-slider__figure-wrapper {
    position: relative;
    flex: 1 0 100% !important;
    flex-wrap: wrap;
    overflow: hidden;
  }

  .spider__slide {
    .smb-spider-slider__item {
      position: absolute;
      bottom: 0;
      right: 0;
      left: 0;
      @include _padding(.25, .5);
    }
  }

  .spider__figure {
    width: 100%; // For IE11
  }

  .spider__dots[data-thumbnails="true"] {
    flex-wrap: wrap;
    justify-content: flex-start;
    @include _margin(.5, -.25, -.5);

    .spider__dot {
      margin: 0;
      flex: 0 0 25%;
      max-width: 25%;
      @include _padding(0, .25, .5);
    }
  }
}

.smb-spider-slider {
  &--16to9 .spider__slide, // @deprecated
  &--4to3 .spider__slide, // @deprecated
  &--16x9 .smb-spider-slider__figure-wrapper,
  &--4x3 .smb-spider-slider__figure-wrapper {
    .spider__figure {
      position: absolute;
      top: 50%; // For IE11
      left: 50%; // For IE11
      transform: translate(-50%, -50%); // For IE11
      width: 100%;

      @supports (object-fit: cover) {
        top: 0;
        left: 0;
        transform: initial;
        height: 100%;
        max-height: none;
        object-fit: cover;
        object-position: 50% 50%;
      }
    }
  }

  &--16to9 .spider__slide::before, // @deprecated
  &--16x9 .smb-spider-slider__figure-wrapper::before {
    content: '';
    display: block;
    padding: 56.25% 0 0;
  }

  &--4to3 .spider__slide::before, // @deprecated
  &--4x3 .smb-spider-slider__figure-wrapper::before {
    content: '';
    display: block;
    padding: 75% 0 0;
  }
}

@each $size, $level in (s: .5, m: 1, l: 1.5) {
  .smb-spider-slider--gutter-#{ $size } {
    $gutter: _space($level, true, true);

    @for $i from 2 through 6 {
      @include _media-only(sm) {
        &[data-sm-slide-to-show] {
          .spider__slide:not(:last-child) {
            margin-right: $gutter;
          }
        }

        &[data-sm-slide-to-show="#{ $i }"] {
          .spider__slide {
            max-width: calc(#{ 100% / $i } - #{ ($i - 1) } * #{ $gutter } / #{ $i });
          }
        }
      }

      @include _media-only(md) {
        &[data-md-slide-to-show] {
          .spider__slide:not(:last-child) {
            margin-right: $gutter;
          }
        }

        &[data-md-slide-to-show="#{ $i }"] {
          .spider__slide {
            max-width: calc(#{ 100% / $i } - #{ ($i - 1) } * #{ $gutter } / #{ $i });
          }
        }
      }

      @include _media-min(lg) {
        &[data-lg-slide-to-show] {
          .spider__slide:not(:last-child) {
            margin-right: $gutter;
          }
        }

        &[data-lg-slide-to-show="#{ $i }"] {
          .spider__slide {
            max-width: calc(#{ 100% / $i } - #{ ($i - 1) } * #{ $gutter } / #{ $i });
          }
        }
      }
    }
  }
}

.smb-spider-slider--shifted.alignfull,
.smb-spider-slider--shifted.alignwide,
[data-align="full"] > .smb-spider-slider--shifted,
[data-align="wide"] > .smb-spider-slider--shifted {
  @supports (--var: 1) {
    .spider__arrows {
      max-width: var(--spider-reference-width);
      left: calc(50% - var(--spider-reference-width) / 2);
    }

    .spider__canvas::before,
    .spider__canvas::after {
      content: '';
      display: block;
      flex: 0 0 auto;
      width: calc((var(--spider-canvas-width) - var(--spider-reference-width)) / 2);
    }

    @for $i from 2 through 6 {
      @include _media-only(sm) {
        &[data-sm-slide-to-show="#{ $i }"] {
          .spider__slide {
            max-width: calc(var(--spider-reference-width) / #{ $i });
          }
        }
      }

      @include _media-only(md) {
        &[data-md-slide-to-show="#{ $i }"] {
          .spider__slide {
            max-width: calc(var(--spider-reference-width) / #{ $i });
          }
        }
      }

      @include _media-min(lg) {
        &[data-lg-slide-to-show="#{ $i }"] {
          .spider__slide {
            max-width: calc(var(--spider-reference-width) / #{ $i });
          }
        }
      }
    }

    @each $size, $level in (s: .5, m: 1, l: 1.5) {
      &.smb-spider-slider--gutter-#{ $size } {
        $gutter: _space($level, true, true);

        .spider__slide:not(:last-child) {
          margin-right: $gutter;
        }

        .spider__slide {
          max-width: calc(var(--spider-reference-width));
        }

        @for $i from 2 through 6 {
          @include _media-only(sm) {
            &[data-sm-slide-to-show="#{ $i }"] {
              .spider__slide {
                max-width: calc(var(--spider-reference-width) / #{ $i } - #{ ($i - 1) } * #{ $gutter } / #{ $i });
              }
            }
          }

          @include _media-only(md) {
            &[data-md-slide-to-show="#{ $i }"] {
              .spider__slide {
                max-width: calc(var(--spider-reference-width) / #{ $i } - #{ ($i - 1) } * #{ $gutter } / #{ $i });
              }
            }
          }

          @include _media-min(lg) {
            &[data-lg-slide-to-show="#{ $i }"] {
              .spider__slide {
                max-width: calc(var(--spider-reference-width) / #{ $i } - #{ ($i - 1) } * #{ $gutter } / #{ $i });
              }
            }
          }
        }
      }
    }
  }
}
